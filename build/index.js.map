{"version":3,"sources":["../src/index.ts","../node_modules/reflect-metadata/Reflect.js","../src/db/model/schema.ts","../src/db/controller/schema.ts","../src/db/controller/db.ts","../src/db/controller/credentialDefintion.ts","../src/db/model/credentialDefinition.ts","../src/anoncreds/services/DbAnonCredsRegistry.ts","../src/DbModule.ts","../src/dids/DbDidRegistrar.ts","../src/dids/DidKey.ts","../src/dids/keyDidDocument.ts","../src/dids/DbDidResolver.ts"],"sourcesContent":["import \"reflect-metadata\";\nexport { DbAnonCredsRegistry } from \"./anoncreds/services/DbAnonCredsRegistry\";\nexport { DbModule } from \"./DbModule\";\nexport { DbDidRegistrar, DbDidResolver } from \"./dids\";\n","/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof global === \"object\" ? global :\n            typeof self === \"object\" ? self :\n                typeof this === \"object\" ? this :\n                    Function(\"return this;\")();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        else {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter);\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                if (typeof target[key] !== \"function\") {\n                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                }\n                if (previous)\n                    previous(key, value);\n            };\n        }\n    })(function (exporter) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var usePolyfill = typeof process === \"object\" && process[\"env\" + \"\"] && process[\"env\" + \"\"][\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\n        var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        // [[Metadata]] internal slot\n        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n        var Metadata = new _WeakMap();\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            if (!metadataMap.delete(metadataKey))\n                return false;\n            if (metadataMap.size > 0)\n                return true;\n            var targetMetadata = Metadata.get(target);\n            targetMetadata.delete(propertyKey);\n            if (targetMetadata.size > 0)\n                return true;\n            Metadata.delete(target);\n            return true;\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        function GetOrCreateMetadataMap(O, P, Create) {\n            var targetMetadata = Metadata.get(O);\n            if (IsUndefined(targetMetadata)) {\n                if (!Create)\n                    return undefined;\n                targetMetadata = new _Map();\n                Metadata.set(O, targetMetadata);\n            }\n            var metadataMap = targetMetadata.get(P);\n            if (IsUndefined(metadataMap)) {\n                if (!Create)\n                    return undefined;\n                metadataMap = new _Map();\n                targetMetadata.set(P, metadataMap);\n            }\n            return metadataMap;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            return ToBoolean(metadataMap.has(MetadataKey));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return undefined;\n            return metadataMap.get(MetadataKey);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n            metadataMap.set(MetadataKey, MetadataValue);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var keys = [];\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return keys;\n            var keysObj = metadataMap.keys();\n            var iterator = GetIterator(keysObj);\n            var k = 0;\n            while (true) {\n                var next = IteratorStep(iterator);\n                if (!next) {\n                    keys.length = k;\n                    return keys;\n                }\n                var nextValue = IteratorValue(next);\n                try {\n                    keys[k] = nextValue;\n                }\n                catch (e) {\n                    try {\n                        IteratorClose(iterator);\n                    }\n                    finally {\n                        throw e;\n                    }\n                }\n                k++;\n            }\n        }\n        // 6 ECMAScript Data Typ0es and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            return /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (key === this._cacheKey) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (this._cacheKey !== key) {\n                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            return /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.values(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    if (typeof crypto !== \"undefined\")\n                        return crypto.getRandomValues(new Uint8Array(size));\n                    if (typeof msCrypto !== \"undefined\")\n                        return msCrypto.getRandomValues(new Uint8Array(size));\n                    return FillRandomBytes(new Uint8Array(size), size);\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 § 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n","import mongoose, { Document, Model } from 'mongoose';\n\ninterface IDbSchema extends Document {\n    issuerId: string;\n    name: string;\n    version: string;\n    attrNames: string[];\n    schemaId: string;\n}\n\nconst DbSchema = new mongoose.Schema<IDbSchema>({\n    issuerId: { type: String, required: true },\n    name: { type: String, required: true },\n    version: { type: String, required: true },\n    attrNames: { type: [String], required: true },\n    schemaId: { type: String, required: true }\n});\n\nexport const DbSchemaModel: Model<IDbSchema> = mongoose.model<IDbSchema>('DbSchema', DbSchema);\n","import { DbSchemaModel } from '../model/schema';\nimport { utils } from '@aries-framework/core';\nimport { AnonCredsSchema, RegisterSchemaOptions } from '@aries-framework/anoncreds';\nimport { connect, disconnect } from './db';\n\n\nexport type ISchema = {\n    issuerId: string;\n    name: string;\n    version: string;\n    attrNames: string[];\n    schemaId: string;\n}\nexport async function storeSchema(options: { db_url:string ,schema: AnonCredsSchema }): Promise<ISchema> {\n    try {\n        await connect(options.db_url);\n        const schema = options.schema\n        const schemaResourceId = utils.uuid()\n        const schemaId = `${schema.issuerId}/resources/schema/${schemaResourceId}`\n        // Create and store schema in MongoDB\n        const newSchema = new DbSchemaModel({\n            schemaId,\n            issuerId: schema.issuerId,\n            name: schema.name,\n            version: schema.version,\n            attrNames: schema.attrNames,\n        });\n        await newSchema.save();\n        await disconnect();\n        return {\n            schemaId,\n            issuerId: schema.issuerId,\n            name: schema.name,\n            version: schema.version,\n            attrNames: schema.attrNames,\n        }\n\n    } catch (e) {\n        await disconnect();\n        throw new Error((e as Error).message)\n    }\n}\n\nexport async function retrieveSchema(options: { db_url: string, schemaId: string }): Promise<ISchema> {\n    try {\n        await connect(options.db_url);\n        const schema = await DbSchemaModel.findOne({ schemaId: options.schemaId });\n        if (!schema) {\n            throw new Error('Schema not found');\n        }\n        await disconnect();\n        return {\n            schemaId: schema.schemaId,\n            issuerId: schema.issuerId,\n            name: schema.name,\n            version: schema.version,\n            attrNames: schema.attrNames,\n        }\n    } catch (e) {\n        await disconnect();\n        throw new Error((e as Error).message)\n    }\n}","import mongoose from 'mongoose';\n\nexport const connect = async (databaseUrl: string): Promise<void> => {\n  try {\n    console.debug('Connecting to MongoDB...');\n    console.debug(`Database URL: ${databaseUrl}`);\n    await mongoose.connect(databaseUrl);\n  } catch (error) {\n    console.error('Error connecting to MongoDB:');\n    console.error((error as Error).message);\n    console.error(JSON.stringify(error));\n    throw error;\n  }\n};\n\nexport const disconnect = async (): Promise<void> => {\n  try {\n    console.debug('Disconnecting from MongoDB...');\n    await mongoose.disconnect();\n  } catch (error) {\n    console.error('Error disconnecting from MongoDB:');\n    console.error((error as Error).message);\n    console.error(JSON.stringify(error));\n    throw error;\n  }\n};\n","import { utils } from \"@aries-framework/core\";\nimport { connect, disconnect } from \"./db\";\nimport { DbCredentialDefinitionModel } from \"../model/credentialDefinition\";\nimport { AnonCredsCredentialDefinition } from \"@aries-framework/anoncreds\";\n\nexport type ICredDef = {\n    issuerId: string;\n    schemaId: string;\n    tag: string;\n    value: any;\n    credentialDefinitionId: string;\n    type: string;\n}\n\nexport async function storeCredentialDefinition(options: { db_url: string, credDef: AnonCredsCredentialDefinition }): Promise<ICredDef> {\n    try {\n        await connect(options.db_url);\n        const credDef = options.credDef\n        const credDefResourceId = utils.uuid()\n        const credentialDefinitionId = `${credDef.issuerId}/resources/credential-definition/${credDefResourceId}`\n        // Create and store credDef in MongoDB\n        const newCredDef = new DbCredentialDefinitionModel({\n            credentialDefinitionId,\n            issuerId: credDef.issuerId,\n            schemaId: credDef.schemaId,\n            tag: credDef.tag,\n            value: credDef.value,\n            type: 'CL'\n        });\n        await newCredDef.save();\n        await disconnect();\n        return {\n            credentialDefinitionId,\n            issuerId: credDef.issuerId,\n            schemaId: credDef.schemaId,\n            tag: credDef.tag,\n            value: credDef.value,\n            type: credDef.type\n        }\n\n    } catch (e) {\n        throw new Error((e as Error).message)\n    }\n}\n\nexport async function retrieveCredentialDefinition(options: { db_url: string, credentialDefinitionId: string }): Promise<ICredDef> {\n    try {\n        await connect(options.db_url);\n        const credDef = await DbCredentialDefinitionModel.findOne({ credentialDefinitionId: options.credentialDefinitionId });\n        if (!credDef) {\n            throw new Error('Credential Definition not found');\n        }\n        await disconnect();\n        return {\n            credentialDefinitionId: credDef.credentialDefinitionId,\n            issuerId: credDef.issuerId,\n            schemaId: credDef.schemaId,\n            tag: credDef.tag,\n            value: credDef.value,\n            type: credDef.type\n        }\n    } catch (e) {\n        await disconnect();\n        throw new Error((e as Error).message)\n    }\n}","import mongoose, {Document, Model} from \"mongoose\";\n\ninterface IDbCredentialDefinition extends Document {\n    issuerId: string;\n    schemaId: string;\n    credentialDefinitionId: string;   \n    value: any;\n    tag: string;\n    type: string;\n}\n\n\nconst CredentialDefinitionSchema = new mongoose.Schema<IDbCredentialDefinition>({\n    issuerId: {type: String, required: true},\n    schemaId: {type: String, required: true},\n    credentialDefinitionId: {type: String, required: true},\n    value: {type: Object, required: true},\n    tag: {type: String, required: true},\n    type: {type: String, required: true}\n});\n\nexport const DbCredentialDefinitionModel: Model<IDbCredentialDefinition> = mongoose.model<IDbCredentialDefinition>('DbCredentialDefinition', CredentialDefinitionSchema);","import type {\n  AnonCredsRegistry,\n  GetCredentialDefinitionReturn,\n  GetRevocationStatusListReturn,\n  GetRevocationRegistryDefinitionReturn,\n  GetSchemaReturn,\n  RegisterCredentialDefinitionOptions,\n  RegisterCredentialDefinitionReturn,\n  RegisterSchemaReturn,\n  RegisterSchemaOptions,\n} from '@aries-framework/anoncreds'\nimport type { AgentContext } from '@aries-framework/core'\n\nimport { AriesFrameworkError, Buffer, Hasher, JsonTransformer, TypedArrayEncoder, utils } from '@aries-framework/core'\n\nimport { DbDidRegistrar, DbDidResolver } from '../../dids/index'\nimport { calculateResourceId } from '../utils/utils'\nimport { retrieveSchema, storeSchema } from '../../db/controller/schema'\nimport { retrieveCredentialDefinition, storeCredentialDefinition } from '../../db/controller/credentialDefintion'\n\nexport class DbAnonCredsRegistry implements AnonCredsRegistry {\n  constructor(protected db_url: string) { }\n  public async getSchema(agentContext: AgentContext, schemaId: string): Promise<GetSchemaReturn> {\n    try {\n      const schema = await retrieveSchema({ db_url: this.db_url, schemaId })\n      return {\n        schema: {\n          issuerId: schema.issuerId,\n          name: schema.name,\n          version: schema.version,\n          attrNames: schema.attrNames,\n        },\n        schemaMetadata: {},\n        schemaId: schema.schemaId,\n        resolutionMetadata: {},\n      }\n\n    } catch (e) {\n      return {\n        schemaId,\n        resolutionMetadata: {\n          error: (e as Error).message || 'notFound',\n        },\n        schemaMetadata: {},\n      };\n    }\n  }\n\n  public async registerSchema(\n    agentContext: AgentContext,\n    options: RegisterSchemaOptions\n  ): Promise<RegisterSchemaReturn> {\n    try {\n      const schema = options.schema\n      const result = await storeSchema({ db_url: this.db_url, schema })\n      return {\n        schemaState: {\n          state: 'finished',\n          schema,\n          schemaId: result.schemaId,\n        },\n        registrationMetadata: {},\n        schemaMetadata: {},\n      }\n    } catch (error) {\n      agentContext.config.logger.debug(`Error registering schema for did '${options.schema.issuerId}'`, {\n        error,\n        did: options.schema.issuerId,\n        schema: options,\n      });\n      return {\n        schemaMetadata: {},\n        registrationMetadata: {},\n        schemaState: {\n          state: 'failed',\n          schema: options.schema,\n          reason: `unknownError: ${(error as Error).message}`,\n        },\n      }\n    }\n  }\n  public async getCredentialDefinition(agentContext: AgentContext, credentialDefinitionId: string): Promise<GetCredentialDefinitionReturn> {\n    try {\n      const credentialDefinition = await retrieveCredentialDefinition({ db_url: this.db_url, credentialDefinitionId });\n      return {\n        credentialDefinitionId: credentialDefinition.credentialDefinitionId,\n        credentialDefinition: {\n          issuerId: credentialDefinition.issuerId,\n          schemaId: credentialDefinition.schemaId,\n          tag: credentialDefinition.tag,\n          value: credentialDefinition.value,\n          type: 'CL'\n        },\n        credentialDefinitionMetadata: {},\n        resolutionMetadata: {},\n      }\n\n    } catch (e) {\n      return {\n        credentialDefinitionId,\n        credentialDefinitionMetadata: {},\n        resolutionMetadata: {\n          error: (e as Error).message || 'notFound',\n          message: `unable to resolve credential definition: ${(e as Error).message}`,\n        },\n      };\n    }\n  }\n  public async registerCredentialDefinition(agentContext: AgentContext, options: RegisterCredentialDefinitionOptions): Promise<RegisterCredentialDefinitionReturn> {\n    try {\n      const result = await storeCredentialDefinition({db_url: this.db_url,  credDef: options.credentialDefinition });\n      return {\n        credentialDefinitionMetadata: {},\n        registrationMetadata: {},\n        credentialDefinitionState: {\n          credentialDefinition: options.credentialDefinition,\n          credentialDefinitionId: result.credentialDefinitionId,\n          state: 'finished',\n        },\n      };\n\n    } catch (e) {\n      return {\n        credentialDefinitionMetadata: {\n        },\n        registrationMetadata: {},\n        credentialDefinitionState: {\n          credentialDefinition: options.credentialDefinition,\n          state: 'failed',\n          reason: `unknownError`,\n        },\n      };\n    }\n  }\n  getRevocationRegistryDefinition(agentContext: AgentContext, revocationRegistryDefinitionId: string): Promise<GetRevocationRegistryDefinitionReturn> {\n    throw new Error('Method not implemented.')\n  }\n  getRevocationStatusList(agentContext: AgentContext, revocationRegistryId: string, timestamp: number): Promise<GetRevocationStatusListReturn> {\n    throw new Error('Method not implemented.')\n  }\n  public methodName = 'db'\n\n  public readonly supportedIdentifier = /^did:db:[_a-z0-9.%A-]*/\n\n\n}\n","import { AgentConfig, DependencyManager, Module, Update, injectable } from \"@aries-framework/core\";\nimport type { AgentContext } from \"@aries-framework/core\";\n\n@injectable()\nexport class DbModule implements Module {\n    public constructor() {\n        // todo \n    }\n    public register(dependencyManager: DependencyManager) {\n        // dependencyManager.registerInstance(AgentConfig, agent)\n        dependencyManager.resolve(AgentConfig)\n    }\n    public async initialize(agentContext: AgentContext): Promise<void> {\n        //todo  we can connect to our ledger using this\n    }\n}","import type {\n  AgentContext,\n  DidRegistrar,\n  DidCreateOptions,\n  DidCreateResult,\n  DidDeactivateResult,\n  DidUpdateResult,\n  AgentConfig,\n} from '@aries-framework/core'\n\nimport {\n    DidDocument,\n    DidDocumentRole,\n    DidRecord,\n    DidRepository,\n    KeyType,\n    Buffer,\n    isValidPrivateKey,\n    utils,\n    TypedArrayEncoder,\n    getKeyFromVerificationMethod,\n    JsonTransformer,\n    VerificationMethod,\n  } from '@aries-framework/core'\n\nimport { DidKey } from './DidKey'\n\nexport class DbDidRegistrar implements DidRegistrar {\n    public readonly supportedMethods = ['db']\n\n    public async create(agentContext: AgentContext, options: KeyDidCreateOptions): Promise<DidCreateResult> {\n\n        const keyType = options.options.keyType \n        const seed = options.secret?.seed\n        const privateKey = options.secret?.privateKey\n\n        if (!keyType) {\n            return {\n                didDocumentMetadata: {},\n                didRegistrationMetadata: {},\n                didState: {\n                    state: 'failed',\n                    reason: 'Missing key type',\n                },\n            }\n        }\n\n        try {\n            const key = await agentContext.wallet.createKey({\n                keyType,\n                seed,\n                privateKey,\n            })\n            const didKey = new DidKey(key)\n\n            // Save the did so we know we created it and can issue with it\n            const didRecord = new DidRecord({\n                did: didKey.did,\n                role: DidDocumentRole.Created,\n            })\n            \n            const didRepository = agentContext.dependencyManager.resolve(DidRepository)\n            await didRepository.save(agentContext, didRecord)\n            // todo store db\n            return {\n                didDocumentMetadata: {},\n                didRegistrationMetadata: {},\n                didState: {\n                    state: 'finished',\n                    did: didKey.did,\n                    didDocument: didKey.didDocument,\n                    secret: {\n                        // FIXME: the uni-registrar creates the seed in the registrar method\n                        // if it doesn't exist so the seed can always be returned. Currently\n                        // we can only return it if the seed was passed in by the user. Once\n                        // we have a secure method for generating seeds we should use the same\n                        // approach\n                        seed: options.secret?.seed,\n                        privateKey: options.secret?.privateKey,\n                    },\n                },\n            }\n        } catch (error) {\n            if(error instanceof Error){\n                return {\n                    didDocumentMetadata: {},\n                    didRegistrationMetadata: {},\n                    didState: {\n                        state: 'failed',\n                        reason: `unknownError: ${error.message}`,\n                    },\n                }\n            }\n            return {\n                didDocumentMetadata: {},\n                didRegistrationMetadata: {},\n                didState: {\n                    state: 'failed',\n                    reason: `unknownError: ${error}`,\n                },\n            }\n            \n        }\n    }\n\n    public async update(): Promise<DidUpdateResult> {\n        return {\n            didDocumentMetadata: {},\n            didRegistrationMetadata: {},\n            didState: {\n                state: 'failed',\n                reason: `notSupported: cannot update did:key did`,\n            },\n        }\n    }\n\n    public async deactivate(): Promise<DidDeactivateResult> {\n        return {\n            didDocumentMetadata: {},\n            didRegistrationMetadata: {},\n            didState: {\n                state: 'failed',\n                reason: `notSupported: cannot deactivate did:key did`,\n            },\n        }\n    }\n}\n\n\nexport interface KeyDidCreateOptions extends DidCreateOptions {\n    method: 'db'\n    // For now we don't support creating a did:key with a did or did document\n    did?: never\n    didDocument?: never\n    options: {\n        keyType: KeyType\n    }\n    secret?: {\n        seed?: Buffer\n        privateKey?: Buffer\n    }\n}\n\nexport type KeyDidUpdateOptions = never\nexport type KeyDidDeactivateOptions = never\n\n","import { Key, parseDid } from '@aries-framework/core'\nimport { getDidDocumentForKey } from './keyDidDocument'\n\nexport class DidKey {\n    public readonly key: Key\n\n    public constructor(key: Key) {\n        this.key = key\n    }\n\n    public static fromDid(did: string) {\n        const parsed = parseDid(did)\n\n        const key = Key.fromFingerprint(parsed.id)\n        return new DidKey(key)\n    }\n\n    public get did() {\n        return `did:db:${this.key.fingerprint}`\n    }\n\n    public get didDocument() {\n        return getDidDocumentForKey(this.did, this.key)\n    }\n}","import {\n    DidDocument, VerificationMethod, Key, KeyType, AriesFrameworkError,\n    SECURITY_CONTEXT_BBS_URL, SECURITY_JWS_CONTEXT_URL, SECURITY_X25519_CONTEXT_URL,\n    DidDocumentBuilder, getBls12381g1g2VerificationMethod, convertPublicKeyToX25519,\n    getBls12381G1Key2020,\n    getBls12381G2Key2020,\n    getEd25519VerificationKey2018,\n    getJsonWebKey2020,\n    getX25519KeyAgreementKey2019,\n} from '@aries-framework/core'\n\n\nconst didDocumentKeyTypeMapping: Record<KeyType, (did: string, key: Key) => DidDocument> = {\n    [KeyType.Ed25519]: getEd25519DidDoc,\n    [KeyType.X25519]: getX25519DidDoc,\n    [KeyType.Bls12381g1]: getBls12381g1DidDoc,\n    [KeyType.Bls12381g2]: getBls12381g2DidDoc,\n    [KeyType.Bls12381g1g2]: getBls12381g1g2DidDoc,\n    [KeyType.P256]: getJsonWebKey2020DidDocument,\n    [KeyType.P384]: getJsonWebKey2020DidDocument,\n    [KeyType.P521]: getJsonWebKey2020DidDocument,\n}\n\nexport function getDidDocumentForKey(did: string, key: Key) {\n    const getDidDocument = didDocumentKeyTypeMapping[key.keyType]\n\n    return getDidDocument(did, key)\n}\n\nfunction getBls12381g1DidDoc(did: string, key: Key) {\n    const verificationMethod = getBls12381G1Key2020({ id: `${did}#${key.fingerprint}`, key, controller: did })\n\n    return getSignatureKeyBase({\n        did,\n        key,\n        verificationMethod,\n    })\n        .addContext(SECURITY_CONTEXT_BBS_URL)\n        .build()\n}\n\nfunction getBls12381g1g2DidDoc(did: string, key: Key) {\n    const verificationMethods = getBls12381g1g2VerificationMethod(did, key)\n\n    const didDocumentBuilder = new DidDocumentBuilder(did)\n\n    for (const verificationMethod of verificationMethods) {\n        didDocumentBuilder\n            .addVerificationMethod(verificationMethod)\n            .addAuthentication(verificationMethod.id)\n            .addAssertionMethod(verificationMethod.id)\n            .addCapabilityDelegation(verificationMethod.id)\n            .addCapabilityInvocation(verificationMethod.id)\n    }\n\n    return didDocumentBuilder.addContext(SECURITY_CONTEXT_BBS_URL).build()\n}\n\nexport function getJsonWebKey2020DidDocument(did: string, key: Key) {\n    const verificationMethod = getJsonWebKey2020({ did, key })\n\n    const didDocumentBuilder = new DidDocumentBuilder(did)\n    didDocumentBuilder.addContext(SECURITY_JWS_CONTEXT_URL).addVerificationMethod(verificationMethod)\n\n    if (!key.supportsEncrypting && !key.supportsSigning) {\n        throw new AriesFrameworkError('Key must support at least signing or encrypting')\n    }\n\n    if (key.supportsSigning) {\n        didDocumentBuilder\n            .addAuthentication(verificationMethod.id)\n            .addAssertionMethod(verificationMethod.id)\n            .addCapabilityDelegation(verificationMethod.id)\n            .addCapabilityInvocation(verificationMethod.id)\n    }\n\n    if (key.supportsEncrypting) {\n        didDocumentBuilder.addKeyAgreement(verificationMethod.id)\n    }\n\n    return didDocumentBuilder.build()\n}\n\nfunction getEd25519DidDoc(did: string, key: Key) {\n    const verificationMethod = getEd25519VerificationKey2018({ id: `${did}#${key.fingerprint}`, key, controller: did })\n\n    const publicKeyX25519 = convertPublicKeyToX25519(key.publicKey)\n    const didKeyX25519 = Key.fromPublicKey(publicKeyX25519, KeyType.X25519)\n    const x25519VerificationMethod = getX25519KeyAgreementKey2019({\n        id: `${did}#${didKeyX25519.fingerprint}`,\n        key: didKeyX25519,\n        controller: did,\n    })\n\n    const didDocBuilder = getSignatureKeyBase({ did, key, verificationMethod })\n\n    didDocBuilder\n        // .addContext(ED25519_SUITE_CONTEXT_URL_2018)\n        .addContext(SECURITY_X25519_CONTEXT_URL)\n        .addKeyAgreement(x25519VerificationMethod)\n\n    return didDocBuilder.build()\n}\n\nfunction getX25519DidDoc(did: string, key: Key) {\n    const verificationMethod = getX25519KeyAgreementKey2019({ id: `${did}#${key.fingerprint}`, key, controller: did })\n\n    const document = new DidDocumentBuilder(did)\n        .addKeyAgreement(verificationMethod)\n        .addContext(SECURITY_X25519_CONTEXT_URL)\n        .build()\n\n    return document\n}\n\nfunction getBls12381g2DidDoc(did: string, key: Key) {\n    const verificationMethod = getBls12381G2Key2020({ id: `${did}#${key.fingerprint}`, key, controller: did })\n\n    return getSignatureKeyBase({\n        did,\n        key,\n        verificationMethod,\n    })\n        .addContext(SECURITY_CONTEXT_BBS_URL)\n        .build()\n}\n\nfunction getSignatureKeyBase({\n    did,\n    key,\n    verificationMethod,\n}: {\n    did: string\n    key: Key\n    verificationMethod: VerificationMethod\n}) {\n    const keyId = `${did}#${key.fingerprint}`\n\n    return new DidDocumentBuilder(did)\n        .addVerificationMethod(verificationMethod)\n        .addAuthentication(keyId)\n        .addAssertionMethod(keyId)\n        .addCapabilityDelegation(keyId)\n        .addCapabilityInvocation(keyId)\n}","import { AgentContext, DidResolutionResult, DidResolver, DidKey } from \"@aries-framework/core\";\n\nexport class DbDidResolver implements DidResolver{\n  public readonly supportedMethods = ['db']\n\n  public async resolve(agentContext: AgentContext, did: string): Promise<DidResolutionResult> {\n    const didDocumentMetadata = {}\n\n    try {\n      const didDocument = DidKey.fromDid(did).didDocument\n\n      return {\n        didDocument,\n        didDocumentMetadata,\n        didResolutionMetadata: { contentType: 'application/did+ld+json' },\n      }\n    } catch (error) {\n      return {\n        didDocument: null,\n        didDocumentMetadata,\n        didResolutionMetadata: {\n          error: 'notFound',\n          message: `resolver_error: Unable to resolve did '${did}': ${error}`,\n        },\n      }\n    }\n  }\n\n}\n"],"mappings":"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","names":["Reflect","hasOwn","MapIterator","Map","Set","WeakMap","mongoose","import_mongoose","mongoose","import_core","import_mongoose","mongoose","import_core","import_core","import_core","import_core","import_core"]}